/****************************************
*     @author Richard Martínez 2010     *
*****************************************/

/**
* Quita los tags de options de html, dejando sólo el título que ve el usuario en el combo
*
* @example
<OPTION value=-1>Seleccione</OPTION><OPTION value=127>Bogot&#225; D.C.-Aero Ambulancias 24 Ltda
</OPTION><OPTION value=298>Bogot&aacute; D.C.-Aga Fano Fabrica Nacional De Oxigeno S A Cundi</OPTION><OPTION value=324>Bogot&#225; D.C.-Ambulancias Abc Ltda</OPTION>
<OPTION value=371>Bogot&#225; D.C.-Ambulancias auxilios y emergencias</OPTION><OPTION value=346>Bogot&#225; D.C.-Ambulancias Meyday Ltda</OPTION><OPTION value=326>Bogot&#225; D.C.-Ambulancias Urgencia Vital</OPTION>
<OPTION value=326>Ni&#241;o</OPTION>
<OPTION value=326>NI&#209;O Jes&uacute;s</OPTION>

* A:
*
-1	Seleccione
127	Bogotá D.C.-Aero Ambulancias 24 Ltda
298	Bogotá D.C.-Aga Fano Fabrica Nacional De Oxigeno S A Cundi
324	Bogotá D.C.-Ambulancias Abc Ltda
371	Bogotá D.C.-Ambulancias auxilios y emergencias
346	Bogotá D.C.-Ambulancias Meyday Ltda
326	Bogotá D.C.-Ambulancias Urgencia Vital
*/

import java.util.regex.Pattern;

void options2Csv(){
	String strSyntaxError = "Syntax Error Html Options";
	String t=textArea.getSelectedText();

	if(t=="" || t==null){
		textArea.selectAll();
		t=textArea.getSelectedText();
	}
	if(!Pattern.compile("(?m)<option[ ]+.*</option>").matcher(t.toLowerCase()).find()){
		Macros.message(view, strSyntaxError);
		return;
	}

	t=t.replaceAll("(?mi)<[ \t]*option", "\n<option");
	t=t.replaceAll("(?mi)(.*<option[ \t]+value[ \t]*=|[ \t]*<[ \t]*/option.*)", "");
	t=t.replaceAll("(?mi)[ \t]*>[ \t]*", "\t");
	t=t.replaceAll("(?mi)^\n", "");

	for(int i=0; i<ARR_CHARS.length; i++){
		t=t.replaceAll(ARR_CHARS[i][2] + "|" + ARR_CHARS[i][3], ARR_CHARS[i][0]);
		if(ARR_CHARS[i][0].equals("ñ")){
			break;
		}
	}
	textArea.setSelectedText(t);
	Registers.setRegister('$', t);
}

options2Csv();