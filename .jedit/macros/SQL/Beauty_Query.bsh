/************************************************
*        @author Richard Mart√≠nez 2010          *
*************************************************/

/**
* Formatea el query para que se vea presentable
*
* @example
select distinct Prestar.dbo.autAutorizacionASP.autIDAutorizacion as AUTORIZACON, commDivision_2.divNom AS REGIONAL_IPS_ORIGEN
, dos , '1, 2'
--comentario
, funcion , funcion(par1, 'par2')
from         dbo.commDivision AS commDivision_3 inner join
							 dbo.commDivision with (nolock) on commDivision_3.divIDDivision = dbo.commDivision.divIDDivisionPadre inner join
							 dbo.redIPS AS Ips_Transcriptor on dbo.commDivision.divIDDivision = Ips_Transcriptor.ipsIDDivision inner join
							 Prestar.dbo.autAutorizacionASP 	ON Prestar.dbo.autAutorizacionASP.autIDIPSOrigen <> Prestar.dbo.autDetalleAutorizacionASP.autIDIPS inner join
							 Prestar.dbo.autDetalleAutorizacionASP with (nolock) on
							 Prestar.dbo.autAutorizacionASP.autIDAutorizacion = Prestar.dbo.autDetalleAutorizacionASP.autIDAutorizacion AND
							 Prestar.dbo.autAutorizacionASP.autIDIPSOrigen <> Prestar.dbo.autDetalleAutorizacionASP.autIDIPS inner join
							 dbo.redIPS AS IPS_Origen with (nolock) ON Prestar.dbo.autAutorizacionASP.autIDIPSOrigen = IPS_Origen.ipsIDIPS inner join
							 dbo.commTablaTablas with (nolock) ON Prestar.dbo.autDetalleAutorizacionASP.autEstado = dbo.commTablaTablas.tblCodElemento inner join
							 dbo.commDivision commDivision_2 with (nolock) inner join
							 dbo.commDivision AS commDivision_1 with (nolock) ON commDivision_2.divIDDivision = commDivision_1.divIDDivisionPadre on and  
							 IPS_Origen.ipsIDDivision = commDivision_1.divIDDivision and  Ips_Transcriptor.ipsIDIPS = Prestar.dbo.autDetalleAutorizacionASP.autIDIPS 
							 WHERE Prestar.dbo.autAutorizacionASP.autIDAutorizacion = 1 AND Prestar.dbo.autAutorizacionASP.autIDAutorizacion = 123 OR Prestar.dbo.autAutorizacionASP.autIDAutorizacion = 456

POR:
SELECT DISTINCT Prestar.dbo.autAutorizacionASP.autIDAutorizacion, commDivision_2.divNom
	, dos, '1, 2'
	, funcion, funcion(par1, 'par2')
FROM dbo.commDivision AS commDivision_3
INNER JOIN dbo.commDivision WITH(NOLOCK) ON commDivision_3.divIDDivision = dbo.commDivision.divIDDivisionPadre
INNER JOIN dbo.redIPS AS Ips_Transcriptor ON dbo.commDivision.divIDDivision = Ips_Transcriptor.ipsIDDivision
INNER JOIN Prestar.dbo.autAutorizacionASP ON Prestar.dbo.autAutorizacionASP.autIDIPSOrigen <> Prestar.dbo.autDetalleAutorizacionASP.autIDIPS
INNER JOIN Prestar.dbo.autDetalleAutorizacionASP WITH(NOLOCK) ON Prestar.dbo.autAutorizacionASP.autIDAutorizacion = Prestar.dbo.autDetalleAutorizacionASP.autIDAutorizacion
	AND Prestar.dbo.autAutorizacionASP.autIDIPSOrigen <> Prestar.dbo.autDetalleAutorizacionASP.autIDIPS
INNER JOIN dbo.redIPS AS IPS_Origen WITH(NOLOCK) ON Prestar.dbo.autAutorizacionASP.autIDIPSOrigen = IPS_Origen.ipsIDIPS
INNER JOIN dbo.commTablaTablas WITH(NOLOCK) ON Prestar.dbo.autDetalleAutorizacionASP.autEstado = dbo.commTablaTablas.tblCodElemento
INNER JOIN dbo.commDivision commDivision_2 WITH(NOLOCK)
INNER JOIN dbo.commDivision AS commDivision_1 WITH(NOLOCK) ON commDivision_2.divIDDivision = commDivision_1.divIDDivisionPadre ON
	AND IPS_Origen.ipsIDDivision = commDivision_1.divIDDivision
	AND Ips_Transcriptor.ipsIDIPS = Prestar.dbo.autDetalleAutorizacionASP.autIDIPS
WHERE Prestar.dbo.autAutorizacionASP.autIDAutorizacion = 1
	AND Prestar.dbo.autAutorizacionASP.autIDAutorizacion = 123
	OR Prestar.dbo.autAutorizacionASP.autIDAutorizacion = 456
*/

import javax.swing.border.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.JDialog.*;

String selectedText = textArea.getSelectedText();
final static String MainDialogTitle = "Beauty Query";
final static String DONE = "Beautify";
final static String CANCEL = "Cancel";
final static String lblUcase = "UpperCase Reserved";
final static String lblWithNoLock = "set WithNolock";
final static String lblIndent = "Indent";
final static String msgCheck = "You have to Check at least one Option";

JCheckBox chkUcase;
JCheckBox chkWithNolock;
JCheckBox chkIndent;
JDialog dialog;
String opcs = "";

void showGui(){
	chkUcase = new JCheckBox(lblUcase, true);
	chkWithNolock = new JCheckBox(lblWithNoLock, false);
	chkIndent = new JCheckBox(lblIndent, true);
	String bufferText = textArea.getBuffer().getText().toUpperCase();

	JPanel checkBoxPanel = new JPanel(new BorderLayout());

	checkBoxPanel.add(chkUcase, BorderLayout.NORTH);
	if(bufferText.indexOf("SELECT") != -1 && bufferText.indexOf("FROM") != -1){
		checkBoxPanel.add(chkWithNolock, BorderLayout.CENTER);
	}
	checkBoxPanel.add(chkIndent, BorderLayout.SOUTH);

	KeyAdapter ka = new KeyAdapter(){
		public void keyReleased(KeyEvent evt){
			if(evt.getKeyCode() == KeyEvent.VK_ESCAPE){
				dialog.dispose();
			}
		}
	};

	chkUcase.addKeyListener(ka);
	chkWithNolock.addKeyListener(ka);
	chkIndent.addKeyListener(ka);

	JButton btnOk = new JButton(DONE);
	JButton btnCancel = new JButton(CANCEL);

	JPanel buttonPanel = new JPanel();
	buttonPanel.add(btnOk, BorderLayout.WEST);
	buttonPanel.add(btnCancel, BorderLayout.EAST);

	btnOk.addActionListener(new ActionListener(){
		public boolean actionPerformed(ActionEvent evt){
			setResult();
			processText();
			dialog.dispose();
			return true;
		}
	});

	btnCancel.addActionListener(new ActionListener(){
		public boolean actionPerformed(ActionEvent evt){
			dialog.dispose();
			return true;
		}
	});

	dialog  = new JDialog(view, MainDialogTitle, true);
	content = new JPanel(new BorderLayout());
	content.setBorder(new EmptyBorder(8, 8, 8, 8));
	content.setPreferredSize(new Dimension(200, 130));
	content.add(checkBoxPanel, BorderLayout.NORTH);
	content.add(buttonPanel, BorderLayout.SOUTH);

	dialog.setContentPane(content);
	dialog.pack();
	dialog.setLocationRelativeTo(view);
	dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
	dialog.getRootPane().setDefaultButton(btnOk);
	dialog.setVisible(true);
}

void processText(){
	if(opcs == ""){
		Macros.message(view, msgCheck);
		return;
	}

	JEditBuffer bfTmp = openTempBuffer();
	JeditSql sql = new JeditSql();
	sql.beautyQuery(opcs);
	if(isMethodInvoker("runNamedMacro")){
		closeTempBuffer(bfTmp);
	}
	dialog.dispose();
}

String getResult(){
	return opcs;
}

void setResult(){
	opcs = "";
	if(chkUcase.isSelected()) opcs += "u";
	if(chkWithNolock.isSelected()) opcs += "l";
	if(chkIndent.isSelected()) opcs += "i";
}

showGui();